name: Deploy to Surge

# déclenche l'action automatiquement après un push sur la branch main
on:
  push:
    branches:
      - master
      - dev

# définition des permissions et autorisation de permettre le déploiement sur GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# autorise un déploiement à la fois
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  buildNdeploy:
    environment: production
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      # fetch du code
      - name: Checkout
        uses: actions/checkout@v3
        
      # installation des dependances
      - name: Install Dependencies
        run: npm install

      # build
      - name: Build
        run: npm run build

      # copier index.html en 200.html
      - name: Create 200.html
        run: cp dist/index.html dist/200.html

      # deploy to surge
      - name: Deploy to Surge
        run: |
         npm install -g surge
         surge ./dist --domain ${{ secrets.SURGE_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

      # Create a new tag
      # - name: Create Tag
      #   id: create_tag
      #   run: |
      #     TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
      #     echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
      #     git config --global user.email "you@example.com"
      #     git config --global user.name "Your Name"
      #     git tag $TAG_NAME
      #     git push origin $TAG_NAME
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a GitHub release
      # - name: Create Release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{ env.TAG_NAME }}
      #     release_name: "Release ${{ env.TAG_NAME }}"
      #     body: "Automated release for tag ${{ env.TAG_NAME }}"
      #     draft: false
      #     prerelease: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}